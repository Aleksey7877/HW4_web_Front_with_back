version: '3.8'

services:
  postgres-products:
    image: postgres:13
    environment:
      POSTGRES_DB: productsdb
      POSTGRES_USER: productsuser
      POSTGRES_PASSWORD: productspass
    ports:
      - "5433:5432"
    volumes:
      - pgdata_products:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U productsuser"]
      interval: 10s
      timeout: 5s
      retries: 5

  products:
    build: ./products
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001
    ports:
      - "8001:8001"
      - "50051:50051"
    environment:
      DATABASE_URL: postgresql://productsuser:productspass@postgres-products:5432/productsdb
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      postgres-products:
        condition: service_healthy
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "true"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-orders:
    image: postgres:13
    environment:
      POSTGRES_DB: shopdb
      POSTGRES_USER: shopuser
      POSTGRES_PASSWORD: shoppass
    ports:
      - "5432:5432"
    volumes:
      - pgdata_orders:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shopuser"]
      interval: 10s
      timeout: 5s
      retries: 5

  orders:
    build: ./orders
    command: uvicorn app.main:app --host 0.0.0.0 --port 8002
    ports:
      - "8002:8002"
    environment:
      DATABASE_URL: postgresql://shopuser:shoppass@postgres-orders:5432/shopdb
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      postgres-orders:
        condition: service_healthy
      kafka:
        condition: service_healthy
      products:
        condition: service_healthy
  
  kafka:
    image: bitnami/kafka:3.5
    container_name: hw3-kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@hw3-kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_KRAFT_CLUSTER_ID=2iEwe5sDR42B0FWhfx1yCw
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka-data:/bitnami/kafka
    networks:
      - default
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: ../frontend
    ports:
      - "8080:80"
    depends_on:
      - orders
      - products
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 3


volumes:
  pgdata_orders:
  kafka-data:
  pgdata_products:

networks:
  default:
